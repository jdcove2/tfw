// byteila,charila,doubleila,floatila,intila,longila,shortila
package %%PACKAGE%%;

%%RANDOM_INCLUDE%%import junit.framework.TestCase;
import tfw.immutable.ila.IlaTestDimensions;

/**
 *
 * @immutables.types=numeric
 */
public class %%NAME%%IlaBoundTest extends TestCase {
    public void testAll() throws Exception {
        %%RANDOM_INIT%%final int length = IlaTestDimensions.defaultIlaLength();
        final %%TYPE%%[] array = new %%TYPE%%[length];
        final %%TYPE%%[] target = new %%TYPE%%[length];
        %%TYPE%% minimum = %%RANDOM_VALUE%%;
        %%TYPE%% maximum = %%RANDOM_VALUE%%;
        if (minimum > maximum) {
            %%TYPE%% tmp = minimum;
            minimum = maximum;
            maximum = tmp;
        }
        for (int ii = 0; ii < array.length; ++ii) {
            array[ii] = %%RANDOM_VALUE%%;
            target[ii] = array[ii];
            if (target[ii] < minimum) {
                target[ii] = minimum;
            } else if (target[ii] > maximum) {
                target[ii] = maximum;
            }
        }
        %%NAME%%Ila ila = %%NAME%%IlaFromArray.create(array);
        %%NAME%%Ila targetIla = %%NAME%%IlaFromArray.create(target);
        %%NAME%%Ila actualIla = %%NAME%%IlaBound.create(ila, minimum, maximum);
        final %%TYPE%% epsilon = (%%TYPE%%) 0.0;
        %%NAME%%IlaCheck.checkAll(
                targetIla,
                actualIla,
                IlaTestDimensions.defaultOffsetLength(),
                IlaTestDimensions.defaultMaxStride(),
                epsilon);
    }
}
