// booleanila,byteila,charila,doubleila,floatila,intila,longila,objectila,shortila
package %%PACKAGE%%;

import java.util.Random;
import org.junit.jupiter.api.Test;
import tfw.immutable.ila.IlaTestDimensions;

/**
 *
 * @immutables.types=all
 */
class %%NAME%%IlaConcatenateTest {
    @Test
    void testAll() throws Exception {
        final Random random = new Random(0);
        final int leftLength = IlaTestDimensions.defaultIlaLength();
        final int rightLength = 1 + random.nextInt(leftLength);
        final %%TYPE%%[] leftArray = new %%TYPE%%[leftLength];
        final %%TYPE%%[] rightArray = new %%TYPE%%[rightLength];
        final %%TYPE%%[] array = new %%TYPE%%[leftLength + rightLength];
        for (int ii = 0; ii < leftArray.length; ++ii) {
            array[ii] = leftArray[ii] = %%RANDOM_VALUE%%;
        }
        for (int ii = 0; ii < rightArray.length; ++ii) {
            array[ii + leftLength] = rightArray[ii] = %%RANDOM_VALUE%%;
        }
        %%NAME%%Ila%%TEMPLATE%% leftIla = %%NAME%%IlaFromArray.create(leftArray);
        %%NAME%%Ila%%TEMPLATE%% rightIla = %%NAME%%IlaFromArray.create(rightArray);
        %%NAME%%Ila%%TEMPLATE%% targetIla = %%NAME%%IlaFromArray.create(array);
        %%NAME%%Ila%%TEMPLATE%% actualIla = %%NAME%%IlaConcatenate.create(leftIla, rightIla);
        final %%TYPE%% epsilon = %%DEFAULT_VALUE%%;
        %%NAME%%IlaCheck.checkAll(
                targetIla,
                actualIla,
                IlaTestDimensions.defaultOffsetLength(),
                IlaTestDimensions.defaultMaxStride(),
                epsilon);
    }
}
