// booleaniis,byteiis,chariis,doubleiis,floatiis,intiis,longiis,objectiis,shortiis
package %%PACKAGE%%;

import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;

import java.io.IOException;
import org.junit.jupiter.api.Test;
import tfw.immutable.ila.%%LOWERCASE%%ila.%%NAME%%Ila;
import tfw.immutable.ila.%%LOWERCASE%%ila.%%NAME%%IlaFromArray;

class %%NAME%%IisFactoryFrom%%NAME%%IlaTest {
    @Test
    void testArguments() {
        assertThrows(IllegalArgumentException.class, () -> %%NAME%%IisFactoryFrom%%NAME%%Ila.create(null));
    }

    @Test
    void testFactory() throws IOException {
        final %%TYPE%%[] expectedArray = new %%TYPE%%[11];
        final %%NAME%%Ila%%TEMPLATE%% ila = %%NAME%%IlaFromArray.create(expectedArray);
        final %%NAME%%IisFactory%%TEMPLATE%% iisf = %%NAME%%IisFactoryFrom%%NAME%%Ila.create(ila);
        final %%NAME%%Iis%%TEMPLATE%% iis = iisf.create();
        final %%TYPE%%[] actualArray = new %%TYPE%%[expectedArray.length];

        assertEquals(actualArray.length, iis.read(actualArray, 0, actualArray.length));
        assertArrayEquals(expectedArray, actualArray);
    }
}
