// booleanila,byteila,charila,doubleila,floatila,intila,longila,objectila,shortila
package %%PACKAGE%%;

import tfw.immutable.DataInvalidException;
import tfw.immutable.ila.AbstractIla;

public abstract class Abstract%%NAME%%Ila%%TEMPLATE%% extends AbstractIla implements %%NAME%%Ila%%TEMPLATE%% {
    protected abstract void toArrayImpl(final %%TYPE_OR_TEMPLATE%%[] array, int offset, long start, int length)
            throws DataInvalidException;

    protected Abstract%%NAME%%Ila(final long length) {
        super(length);
    }

    @Override
    public final void toArray(final %%TYPE_OR_TEMPLATE%%[] array, final int offset, final long start, final int length)
            throws DataInvalidException {
        if (length == 0) {
            return;
        }

        boundsCheck(array.length, offset, start, length);
        toArrayImpl(array, offset, start, length);
    }
}
