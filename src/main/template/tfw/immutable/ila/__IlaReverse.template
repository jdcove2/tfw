// booleanila,byteila,charila,doubleila,floatila,intila,longila,objectila,shortila
package %%PACKAGE%%;

import tfw.check.Argument;
import tfw.immutable.DataInvalidException;

/**
 *
 * @immutables.types=all
 */
public final class %%NAME%%IlaReverse {
    private %%NAME%%IlaReverse() {
        // non-instantiable class
    }

    public static %%TEMPLATE_SPACE%%%%NAME%%Ila%%TEMPLATE%% create(%%NAME%%Ila%%TEMPLATE%% ila) {
        Argument.assertNotNull(ila, "ila");

        return new My%%NAME%%Ila%%DIAMOND%%(ila);
    }

    private static class My%%NAME%%Ila%%TEMPLATE%% extends Abstract%%NAME%%Ila%%TEMPLATE%% {
        private final %%NAME%%Ila%%TEMPLATE%% ila;

        My%%NAME%%Ila(%%NAME%%Ila%%TEMPLATE%% ila) {
            super(ila.length());
            this.ila = ila;
        }

        protected void toArrayImpl(%%TYPE_OR_TEMPLATE%%[] array, int offset, int stride, long start, int length)
                throws DataInvalidException {
            ila.toArray(array, offset + (length - 1) * stride, -stride, length() - (start + length), length);
        }
    }
}
