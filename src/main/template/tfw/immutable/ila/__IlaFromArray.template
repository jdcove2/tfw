// booleanila,byteila,charila,doubleila,floatila,intila,longila,objectila,shortila
package %%PACKAGE%%;

import tfw.check.Argument;

public final class %%NAME%%IlaFromArray {
    private %%NAME%%IlaFromArray() {
        // non-instantiable class
    }

    public static %%TEMPLATE_SPACE%%%%NAME%%Ila%%TEMPLATE%% create(%%TYPE_OR_TEMPLATE%%[] array) {
        Argument.assertNotNull(array, "array");

        return new %%NAME%%IlaImpl%%DIAMOND%%(array);
    }

    private static class %%NAME%%IlaImpl%%TEMPLATE%% extends Abstract%%NAME%%Ila%%TEMPLATE%% {
        private final %%TYPE_OR_TEMPLATE%%[] array;

        private %%NAME%%IlaImpl(%%TYPE_OR_TEMPLATE%%[] array) {
            this.array = array;
        }

        @Override
        protected long lengthImpl() {
            return array.length;
        }

        @Override
        protected void getImpl(%%TYPE_OR_TEMPLATE%%[] array, int offset, long start, int length) {
            System.arraycopy(this.array, (int) start, array, offset, length);
        }
    }
}
