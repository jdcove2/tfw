// doubleila,floatila
package %%PACKAGE%%;

import java.io.IOException;
import tfw.check.Argument;

public final class %%NAME%%IlaRound {
    private %%NAME%%IlaRound() {
        // non-instantiable class
    }

    public static %%NAME%%Ila create(%%NAME%%Ila ila) {
        Argument.assertNotNull(ila, "ila");

        return new My%%NAME%%Ila(ila);
    }

    private static class My%%NAME%%Ila extends Abstract%%NAME%%Ila {
        private final %%NAME%%Ila ila;

        My%%NAME%%Ila(%%NAME%%Ila ila) {
            this.ila = ila;
        }

        @Override
        protected long lengthImpl() throws IOException {
            return ila.length();
        }

        @Override
        protected void toArrayImpl(%%TYPE%%[] array, int offset, long start, int length) throws IOException {
            ila.toArray(array, offset, start, length);

            for (int ii = offset; length > 0; ii++, --length) {
                array[ii] =%%CAST_FROM_DOUBLE%% StrictMath.rint(array[ii]);
            }
        }
    }
}
