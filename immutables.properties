immutables.autogen=// AUTO GENERATED FROM TEMPLATE

immutables.types.all = float, double,                \
                       byte, short, int, long,       \
                       object, boolean, char, string

immutables.types.numeric = float, double,            \
                           byte, short, int, long, char

immutables.types.numericnotfloat = double,                    \
                                   byte, short, int, long, char

immutables.types.numericnotdouble = float,                     \
                                    byte, short, int, long, char

immutables.types.numericnotbyte = float, double,            \
                                  short, int, long, char

immutables.types.numericnotshort = float, double,            \
                                   byte, int, long, char

immutables.types.numericnotint = float, double,            \
                                 byte, short, long, char

immutables.types.numericnotlong = float, double,            \
                                  byte, short, int, char

immutables.types.numericnotchar = float, double,            \
                                  byte, short, int, long

immutables.types.nonnumeric = object, boolean, string

immutables.types.floating = float, double

immutables.categories=name,type,package,random_include,random_init,\
                      random_value,assert_equals_delta,\
                      default_value,create_immutable_start,\
                      create_immutable_end,is_equals_start,is_equals_end

immutables.boolean.name=Boolean
immutables.boolean.type=boolean
immutables.boolean.package=tfw.immutable.ila.booleanila
immutables.boolean.random_include=import java.util.Random;
immutables.boolean.random_init=final Random random = new Random(0);
immutables.boolean.random_value=random.nextBoolean()
immutables.boolean.assert_equals_delta=
immutables.boolean.default_value=false
immutables.boolean.create_immutable_start=(
immutables.boolean.create_immutable_end= ? Boolean.TRUE : Boolean.FALSE)
immutables.boolean.is_equals_start===
immutables.boolean.is_equals_end=

immutables.byte.name=Byte
immutables.byte.type=byte
immutables.byte.package=tfw.immutable.ila.byteila
immutables.byte.random_include=import java.util.Random;
immutables.byte.random_init=final Random random = new Random(0);
immutables.byte.random_value=(byte)random.nextInt()
immutables.byte.assert_equals_delta=
immutables.byte.default_value=(byte)0
immutables.byte.create_immutable_start=new Byte(
immutables.byte.create_immutable_end=)
immutables.byte.is_equals_start===
immutables.byte.is_equals_end=

immutables.char.name=Char
immutables.char.type=char
immutables.char.package=tfw.immutable.ila.charila
immutables.char.random_include=import java.util.Random;
immutables.char.random_init=final Random random = new Random(0);
immutables.char.random_value=(char)random.nextInt()
immutables.char.assert_equals_delta=
immutables.char.default_value=(char)0
immutables.char.create_immutable_start=new Character(
immutables.char.create_immutable_end=)
immutables.char.is_equals_start===
immutables.char.is_equals_end=

immutables.double.name=Double
immutables.double.type=double
immutables.double.package=tfw.immutable.ila.doubleila
immutables.double.random_include=import java.util.Random;
immutables.double.random_init=final Random random = new Random(0);
immutables.double.random_value=random.nextDouble()
immutables.double.assert_equals_delta=, 0.0
immutables.double.default_value=0.0
immutables.double.create_immutable_start=new Double(
immutables.double.create_immutable_end=)
immutables.double.is_equals_start===
immutables.double.is_equals_end=

immutables.float.name=Float
immutables.float.type=float
immutables.float.package=tfw.immutable.ila.floatila
immutables.float.random_include=import java.util.Random;
immutables.float.random_init=final Random random = new Random(0);
immutables.float.random_value=random.nextFloat()
immutables.float.assert_equals_delta=, 0.0f
immutables.float.default_value=0.0f
immutables.float.create_immutable_start=new Float(
immutables.float.create_immutable_end=)
immutables.float.is_equals_start===
immutables.float.is_equals_end=

immutables.int.name=Int
immutables.int.type=int
immutables.int.package=tfw.immutable.ila.intila
immutables.int.random_include=import java.util.Random;
immutables.int.random_init=final Random random = new Random(0);
immutables.int.random_value=random.nextInt()
immutables.int.assert_equals_delta=
immutables.int.default_value=0
immutables.int.create_immutable_start=new Integer(
immutables.int.create_immutable_end=)
immutables.int.is_equals_start===
immutables.int.is_equals_end=

immutables.long.name=Long
immutables.long.type=long
immutables.long.package=tfw.immutable.ila.longila
immutables.long.random_include=import java.util.Random;
immutables.long.random_init=final Random random = new Random(0);
immutables.long.random_value=random.nextLong()
immutables.long.assert_equals_delta=
immutables.long.default_value=0L
immutables.long.create_immutable_start=new Long(
immutables.long.create_immutable_end=)
immutables.long.is_equals_start===
immutables.long.is_equals_end=

immutables.object.name=Object
immutables.object.type=Object
immutables.object.package=tfw.immutable.ila.objectila
immutables.object.random_include=
immutables.object.random_init=
immutables.object.random_value=new Object()
immutables.object.assert_equals_delta=
immutables.object.default_value=Object.class
immutables.object.create_immutable_start=
immutables.object.create_immutable_end=
immutables.object.is_equals_start=.equals(
immutables.object.is_equals_end=)

immutables.short.name=Short
immutables.short.type=short
immutables.short.package=tfw.immutable.ila.shortila
immutables.short.random_include=import java.util.Random;
immutables.short.random_init=final Random random = new Random(0);
immutables.short.random_value=(short)random.nextInt()
immutables.short.assert_equals_delta=
immutables.short.default_value=(short)0
immutables.short.create_immutable_start=new Short(
immutables.short.create_immutable_end=)
immutables.short.is_equals_start===
immutables.short.is_equals_end=

immutables.string.name=String
immutables.string.type=String
immutables.string.package=tfw.immutable.ila.stringila
immutables.string.random_include=
immutables.string.random_init=
immutables.string.random_value=new String()
immutables.string.assert_equals_delta=
immutables.string.default_value=""
immutables.string.create_immutable_start=
immutables.string.create_immutable_end=
immutables.string.is_equals_start=.equals(
immutables.string.is_equals_end=)
